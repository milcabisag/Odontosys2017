/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OdontoSysPantalla;

import OdontoSysPantallaAuxiliares.DetalleConvenio;
import OdontoSysControlador.AgendaControlador;
import OdontoSysControlador.CiudadControlador;
import OdontoSysControlador.ConvenioControlador;
import OdontoSysControlador.OrdenServicioControlador;
import OdontoSysControlador.PacienteControlador;
import OdontoSysModelo.Agenda;
import OdontoSysModelo.Ciudad;
import OdontoSysModelo.Empresa;
import OdontoSysModelo.Movimiento;
import OdontoSysModelo.OrdenServicio;
import OdontoSysModelo.Paciente;
import OdontoSysModelo.Usuario;
import OdontoSysPantallaAuxiliares.BuscarOrdenServicio;
import OdontoSysPantallaAuxiliares.ObtenerPaciente;
import static OdontoSysPantallaAuxiliares.ObtenerPaciente.pac;
import OdontoSysPantallaAuxiliares.obtenerFechas;
import OdontoSysUtil.Configuraciones;
import OdontoSysVista.PacienteVista;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author user
 */
public class Pacientes extends javax.swing.JFrame {

    /**
     * Creates new form Pacientes
     */
    public Pacientes() {
        initComponents();
        recuperarCiudades();
        BotonInvisibles();
                
        // Tabla Estado de Cuenta
        tablaEstado.addColumn("Fecha");
        tablaEstado.addColumn("Descripción");
        tablaEstado.addColumn("Debe");
        tablaEstado.addColumn("Haber");
        
        // Tabla Agenda
        tablaAgenda.addColumn("Fecha");
        tablaAgenda.addColumn("Hora");
        tablaAgenda.addColumn("Motivo");
        tablaAgenda.addColumn("Doctor");
        tablaAgenda.addColumn("Estado");
        tablaAgenda.addColumn("Cod. Orden");
        
        // Tabla Convenios
        tablaConvenio.addColumn("Empresa");
        tablaConvenio.addColumn("RUC");
        tablaConvenio.addColumn("Teléfono");
        
    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jButtonBuscar = new javax.swing.JButton();
        jButtonInsPaciente = new javax.swing.JButton();
        jButtonModPaciente = new javax.swing.JButton();
        jButtonElimPaciente = new javax.swing.JButton();
        jButtonMenu = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelDatos = new javax.swing.JPanel();
        jLabelDNombres = new javax.swing.JLabel();
        jLabelDApellidos = new javax.swing.JLabel();
        jLabelDCI = new javax.swing.JLabel();
        jTextFieldDNombres = new javax.swing.JTextField();
        jTextFieldDApellidos = new javax.swing.JTextField();
        jTextFieldDCI = new javax.swing.JTextField();
        jLabelDEdad = new javax.swing.JLabel();
        jLabelDSexo = new javax.swing.JLabel();
        jTextFieldDTel = new javax.swing.JTextField();
        jLabelDTel = new javax.swing.JLabel();
        jTextFieldDCel = new javax.swing.JTextField();
        jLabelDCel = new javax.swing.JLabel();
        jLabelDDireccion = new javax.swing.JLabel();
        jTextFieldDDireccion = new javax.swing.JTextField();
        jLabelDCiudad = new javax.swing.JLabel();
        jTextFieldDEmail = new javax.swing.JTextField();
        jLabelDEmail = new javax.swing.JLabel();
        jButtonGuardar = new javax.swing.JButton();
        jDateChooserEdad = new com.toedter.calendar.JDateChooser();
        jButtonOrdenServicio = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jComboBoxSexo = new javax.swing.JComboBox();
        Datos = new javax.swing.JLabel();
        jCBciudad = new javax.swing.JComboBox();
        jLabelNom = new javax.swing.JLabel();
        jLabelApe = new javax.swing.JLabel();
        jLabelCI = new javax.swing.JLabel();
        jLabelTel = new javax.swing.JLabel();
        jLabelCel = new javax.swing.JLabel();
        jLabelDir = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jPanelEstadoCuenta = new javax.swing.JPanel();
        EstadoC = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEstadoDeCuenta = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSaldo = new javax.swing.JTextField();
        jButtonRealizarPago = new javax.swing.JButton();
        jButtonGenerarReporte = new javax.swing.JButton();
        jButtonNotaCredito = new javax.swing.JButton();
        jPanelConvenios = new javax.swing.JPanel();
        Convenio = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableConvenios = new javax.swing.JTable();
        jButtonInsertarConvenio = new javax.swing.JButton();
        jPanelAgenda = new javax.swing.JPanel();
        Citas = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableAgenda = new javax.swing.JTable();
        jButtonAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonBuscar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/buscar.png"))); // NOI18N
        jButtonBuscar.setText("Buscar Paciente");
        jButtonBuscar.setToolTipText("Realiza búsqueda de un paciente por número de cédula");
        jButtonBuscar.setBorder(null);
        jButtonBuscar.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonBuscar.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonBuscar.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonBuscar.setRolloverEnabled(false);
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonInsPaciente.setBackground(new java.awt.Color(204, 204, 204));
        jButtonInsPaciente.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonInsPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/agregar.png"))); // NOI18N
        jButtonInsPaciente.setText("Insertar Paciente");
        jButtonInsPaciente.setToolTipText("Habilita los campos para insertar un nuevo paciente");
        jButtonInsPaciente.setBorder(null);
        jButtonInsPaciente.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonInsPaciente.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonInsPaciente.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonInsPaciente.setRolloverEnabled(false);
        jButtonInsPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsPacienteActionPerformed(evt);
            }
        });

        jButtonModPaciente.setBackground(new java.awt.Color(204, 204, 204));
        jButtonModPaciente.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonModPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/modificar.png"))); // NOI18N
        jButtonModPaciente.setText("Modificar Paciente");
        jButtonModPaciente.setToolTipText("Habilita los campos para modificar un paciente");
        jButtonModPaciente.setBorder(null);
        jButtonModPaciente.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonModPaciente.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonModPaciente.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonModPaciente.setRolloverEnabled(false);
        jButtonModPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModPacienteActionPerformed(evt);
            }
        });

        jButtonElimPaciente.setBackground(new java.awt.Color(204, 204, 204));
        jButtonElimPaciente.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonElimPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/borrar.png"))); // NOI18N
        jButtonElimPaciente.setText("Eliminar Paciente");
        jButtonElimPaciente.setToolTipText("Permite la eliminación lógica de un paciente");
        jButtonElimPaciente.setBorder(null);
        jButtonElimPaciente.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonElimPaciente.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonElimPaciente.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonElimPaciente.setRolloverEnabled(false);
        jButtonElimPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonElimPacienteActionPerformed(evt);
            }
        });

        jButtonMenu.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jButtonMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/accesos.png"))); // NOI18N
        jButtonMenu.setText("Volver al menú principal");
        jButtonMenu.setBorder(null);
        jButtonMenu.setMargin(new java.awt.Insets(2, 5, 2, 5));
        jButtonMenu.setMaximumSize(new java.awt.Dimension(170, 25));
        jButtonMenu.setMinimumSize(new java.awt.Dimension(170, 25));
        jButtonMenu.setPreferredSize(new java.awt.Dimension(170, 25));
        jButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuActionPerformed(evt);
            }
        });

        jLabelDNombres.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDNombres.setText("Nombres");

        jLabelDApellidos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDApellidos.setText("Apellidos");

        jLabelDCI.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDCI.setText("Nro de CI");

        jTextFieldDNombres.setEditable(false);
        jTextFieldDNombres.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDNombres.setToolTipText("");
        jTextFieldDNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDNombresActionPerformed(evt);
            }
        });
        jTextFieldDNombres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDNombresFocusLost(evt);
            }
        });
        jTextFieldDNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloLetrasKeyTyped(evt);
            }
        });

        jTextFieldDApellidos.setEditable(false);
        jTextFieldDApellidos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDApellidos.setToolTipText("");
        jTextFieldDApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDApellidosActionPerformed(evt);
            }
        });
        jTextFieldDApellidos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDApellidosFocusLost(evt);
            }
        });
        jTextFieldDApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloLetrasKeyTyped(evt);
            }
        });

        jTextFieldDCI.setEditable(false);
        jTextFieldDCI.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDCI.setToolTipText("");
        jTextFieldDCI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDCIActionPerformed(evt);
            }
        });
        jTextFieldDCI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDCIFocusLost(evt);
            }
        });
        jTextFieldDCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloNumerosKeyTyped(evt);
            }
        });

        jLabelDEdad.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDEdad.setText("Fecha de Nacimiento");

        jLabelDSexo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDSexo.setText("Sexo");

        jTextFieldDTel.setEditable(false);
        jTextFieldDTel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDTel.setToolTipText("");
        jTextFieldDTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDTelActionPerformed(evt);
            }
        });
        jTextFieldDTel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDTelFocusLost(evt);
            }
        });
        jTextFieldDTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDTelKeyTyped(evt);
            }
        });

        jLabelDTel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDTel.setText("Teléfono");

        jTextFieldDCel.setEditable(false);
        jTextFieldDCel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDCel.setToolTipText("");
        jTextFieldDCel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDCelActionPerformed(evt);
            }
        });
        jTextFieldDCel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDCelFocusLost(evt);
            }
        });
        jTextFieldDCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDCelKeyTyped(evt);
            }
        });

        jLabelDCel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDCel.setText("Celular");

        jLabelDDireccion.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDDireccion.setText("Direccion");

        jTextFieldDDireccion.setEditable(false);
        jTextFieldDDireccion.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDDireccion.setToolTipText("");
        jTextFieldDDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDDireccionActionPerformed(evt);
            }
        });
        jTextFieldDDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDDireccionFocusLost(evt);
            }
        });
        jTextFieldDDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
        });

        jLabelDCiudad.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDCiudad.setText("Ciudad");

        jTextFieldDEmail.setEditable(false);
        jTextFieldDEmail.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDEmail.setToolTipText("");
        jTextFieldDEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDEmailActionPerformed(evt);
            }
        });
        jTextFieldDEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDEmailFocusLost(evt);
            }
        });
        jTextFieldDEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PacienteKeyReleased(evt);
            }
        });

        jLabelDEmail.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabelDEmail.setText("Email");

        jButtonGuardar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/guardar.png"))); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setActionCommand("");
        jButtonGuardar.setAutoscrolls(true);
        jButtonGuardar.setBorder(null);
        jButtonGuardar.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonGuardar.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonGuardar.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jDateChooserEdad.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooserEdad.setEnabled(false);
        jDateChooserEdad.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jButtonOrdenServicio.setBackground(new java.awt.Color(255, 0, 0));
        jButtonOrdenServicio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonOrdenServicio.setText("Orden de Servicio Pendiente");
        jButtonOrdenServicio.setToolTipText("Muestra la Orden de Servicio por facturar");
        jButtonOrdenServicio.setBorder(null);
        jButtonOrdenServicio.setMaximumSize(new java.awt.Dimension(170, 25));
        jButtonOrdenServicio.setMinimumSize(new java.awt.Dimension(170, 25));
        jButtonOrdenServicio.setPreferredSize(new java.awt.Dimension(170, 25));
        jButtonOrdenServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenServicioActionPerformed(evt);
            }
        });

        jButtonModificar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/ingresar.png"))); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.setActionCommand("");
        jButtonModificar.setAutoscrolls(true);
        jButtonModificar.setBorder(null);
        jButtonModificar.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonModificar.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonModificar.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jComboBoxSexo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        jComboBoxSexo.setEnabled(false);

        Datos.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        Datos.setText("Datos Personales");

        jCBciudad.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jCBciudad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBciudad.setEnabled(false);

        jLabelNom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelNom.setForeground(new java.awt.Color(255, 0, 0));
        jLabelNom.setText("El nombre debe tener entre 3 y 25 caracteres");

        jLabelApe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelApe.setForeground(new java.awt.Color(255, 0, 0));
        jLabelApe.setText("El apellido debe tener entre 3 y 25 caracteres");

        jLabelCI.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCI.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCI.setText("La cédula debe tener entre 5 y 8 caracteres");

        jLabelTel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTel.setForeground(new java.awt.Color(255, 0, 0));
        jLabelTel.setText("Hasta 20 caracteres permitidos");

        jLabelCel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCel.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCel.setText("Hasta 20 caracteres permitidos");

        jLabelDir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDir.setForeground(new java.awt.Color(255, 0, 0));
        jLabelDir.setText("La dirección debe tener entre 5 y 50 caracteres");

        jLabelEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelEmail.setForeground(new java.awt.Color(255, 0, 0));
        jLabelEmail.setText("Hasta 20 caracteres permitidos");
        jLabelEmail.setToolTipText("");

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelDDireccion, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelDCiudad, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelDEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelDCel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelDTel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldDEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDCel, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDTel, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(jCBciudad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                                                .addComponent(jLabelDApellidos)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextFieldDApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                                .addComponent(jLabelDNombres)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextFieldDNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(1, 1, 1))
                                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabelDCI)
                                            .addComponent(jLabelDEdad))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                                .addComponent(jDateChooserEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabelDSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jComboBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextFieldDCI, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelApe)
                            .addComponent(jLabelNom)
                            .addComponent(jLabelCI)
                            .addComponent(jLabelTel)
                            .addComponent(jLabelCel)))
                    .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelDatosLayout.createSequentialGroup()
                            .addComponent(jButtonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelDatosLayout.createSequentialGroup()
                            .addComponent(Datos)
                            .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelDatosLayout.createSequentialGroup()
                                    .addGap(418, 418, 418)
                                    .addComponent(jButtonOrdenServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelDatosLayout.createSequentialGroup()
                                    .addGap(308, 308, 308)
                                    .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelEmail)
                                        .addComponent(jLabelDir)))))))
                .addContainerGap())
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Datos)
                    .addComponent(jButtonOrdenServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNom))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelApe))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDCI, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDCI, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCI))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelDSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooserEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDTel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDTel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTel))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDCel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDCel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCel))
                .addGap(11, 11, 11)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBciudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEmail)))
                    .addComponent(jLabelDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Datos", new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/persona.png")), jPanelDatos); // NOI18N

        jPanelEstadoCuenta.setEnabled(false);

        EstadoC.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        EstadoC.setText("Histórico de Estado de Cuenta");

        jTableEstadoDeCuenta.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTableEstadoDeCuenta.setModel(tablaEstado);
        jScrollPane2.setViewportView(jTableEstadoDeCuenta);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Saldo hasta la fecha");

        jTextFieldSaldo.setEditable(false);
        jTextFieldSaldo.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jButtonRealizarPago.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonRealizarPago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/dinero.png"))); // NOI18N
        jButtonRealizarPago.setText("Realizar un Pago");
        jButtonRealizarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRealizarPagoActionPerformed(evt);
            }
        });

        jButtonGenerarReporte.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonGenerarReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/hoja.png"))); // NOI18N
        jButtonGenerarReporte.setText("Generar Reporte");
        jButtonGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarReporteActionPerformed(evt);
            }
        });

        jButtonNotaCredito.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonNotaCredito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/nota.png"))); // NOI18N
        jButtonNotaCredito.setText("Preparar Nota de Crédito");
        jButtonNotaCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNotaCreditoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEstadoCuentaLayout = new javax.swing.GroupLayout(jPanelEstadoCuenta);
        jPanelEstadoCuenta.setLayout(jPanelEstadoCuentaLayout);
        jPanelEstadoCuentaLayout.setHorizontalGroup(
            jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEstadoCuentaLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelEstadoCuentaLayout.createSequentialGroup()
                        .addComponent(jButtonRealizarPago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonNotaCredito)
                        .addGap(87, 87, 87)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEstadoCuentaLayout.createSequentialGroup()
                        .addComponent(EstadoC)
                        .addGap(69, 69, 69)
                        .addComponent(jButtonGenerarReporte))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanelEstadoCuentaLayout.setVerticalGroup(
            jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEstadoCuentaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGenerarReporte)
                    .addComponent(EstadoC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonRealizarPago)
                        .addComponent(jButtonNotaCredito))
                    .addGroup(jPanelEstadoCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estado de Cuenta", new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/grafico.png")), jPanelEstadoCuenta); // NOI18N

        jPanelConvenios.setEnabled(false);

        Convenio.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        Convenio.setText("Convenios");

        jTableConvenios.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTableConvenios.setModel(tablaConvenio);
        jTableConvenios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableConveniosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableConvenios);

        jButtonInsertarConvenio.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonInsertarConvenio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/agregar.png"))); // NOI18N
        jButtonInsertarConvenio.setText("Insertar Convenio");
        jButtonInsertarConvenio.setMargin(new java.awt.Insets(2, 5, 2, 5));
        jButtonInsertarConvenio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarConvenioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConveniosLayout = new javax.swing.GroupLayout(jPanelConvenios);
        jPanelConvenios.setLayout(jPanelConveniosLayout);
        jPanelConveniosLayout.setHorizontalGroup(
            jPanelConveniosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConveniosLayout.createSequentialGroup()
                .addGroup(jPanelConveniosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConveniosLayout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(Convenio))
                    .addGroup(jPanelConveniosLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanelConveniosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonInsertarConvenio)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanelConveniosLayout.setVerticalGroup(
            jPanelConveniosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConveniosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Convenio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonInsertarConvenio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Convenios", new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/hoja.png")), jPanelConvenios); // NOI18N

        jPanelAgenda.setEnabled(false);

        Citas.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        Citas.setText("Histórico de Citas");

        jTableAgenda.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTableAgenda.setModel(tablaAgenda);
        jScrollPane4.setViewportView(jTableAgenda);

        javax.swing.GroupLayout jPanelAgendaLayout = new javax.swing.GroupLayout(jPanelAgenda);
        jPanelAgenda.setLayout(jPanelAgendaLayout);
        jPanelAgendaLayout.setHorizontalGroup(
            jPanelAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgendaLayout.createSequentialGroup()
                .addGroup(jPanelAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAgendaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAgendaLayout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(Citas)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanelAgendaLayout.setVerticalGroup(
            jPanelAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAgendaLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(Citas)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Citas - Agenda", new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/agenda.png")), jPanelAgenda); // NOI18N

        jButtonAtras.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButtonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/eliminar.png"))); // NOI18N
        jButtonAtras.setText("Cancelar");
        jButtonAtras.setBorder(null);
        jButtonAtras.setMaximumSize(new java.awt.Dimension(150, 25));
        jButtonAtras.setMinimumSize(new java.awt.Dimension(150, 25));
        jButtonAtras.setPreferredSize(new java.awt.Dimension(150, 25));
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonInsPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonModPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonElimPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(478, 478, 478)
                                        .addComponent(jButtonMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButtonAtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInsPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonElimPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed

        ObtenerPaciente jDialog= new ObtenerPaciente(null, true);
        jDialog.setVisible(true);
        pacienteActual = jDialog.getReturnStatus();
        if(pacienteActual != null){
            habilitarBotones();
            escribirPaciente(pacienteActual);
        }else {
            JOptionPane.showMessageDialog(null, "No se pudo recuperar el paciente" , "Obtener Paciente" , JOptionPane.QUESTION_MESSAGE );
        } 
        
  /*      limpiar();
        String cedulaString;
        int  cedula = 0;
        boolean bandera;
        do{
            try{
                cedulaString = JOptionPane.showInputDialog ( null, "Ingrese CI de Paciente" , "Buscar Paciente" , JOptionPane.QUESTION_MESSAGE ) ;        
                if(cedulaString == null){
                    bandera = true;
                }else{
                    cedula= Integer.parseInt(cedulaString);
                    bandera = true;
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Solo se permiten numeros" , "Buscar por CI" , JOptionPane.QUESTION_MESSAGE );
                bandera = false;
                cedula = -1;
            }
        }while(!bandera); 
        if(cedula > 0){
            pacienteActual = PacienteControlador.BuscarCedula(cedula);
            if (pacienteActual != null) {
                habilitarBotones();
                escribirPaciente(pacienteActual);
            } else {
                JOptionPane.showMessageDialog(null, "Paciente no encontrado!" , "Paciente Controlador" , JOptionPane.QUESTION_MESSAGE );
            } 
        }
        */
        
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    
    private void jTextFieldDNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDNombresActionPerformed

    private void jTextFieldDApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDApellidosActionPerformed

    private void jTextFieldDCIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDCIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDCIActionPerformed

    private void jTextFieldDTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDTelActionPerformed

    private void jTextFieldDCelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDCelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDCelActionPerformed

    private void jTextFieldDDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDDireccionActionPerformed

    private void jTextFieldDEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDEmailActionPerformed

    private void jButtonModPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModPacienteActionPerformed
        habilitarDatos();
        jButtonModificar.setVisible(true);
        jButtonAtras.setVisible(true);
        jButtonModPaciente.setVisible(false);
        jButtonElimPaciente.setVisible(false);
    }//GEN-LAST:event_jButtonModPacienteActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        boolean v = validaciones();
        if(v){
            insertarPaciente();
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonInsPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsPacienteActionPerformed
        // TODO add your handling code here:
        habilitarDatos();
        jTextFieldDNombres.requestFocus(rootPaneCheckingEnabled);
        jButtonGuardar.setVisible(true);
        jButtonAtras.setVisible(true);
        
    }//GEN-LAST:event_jButtonInsPacienteActionPerformed

    private void PacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PacienteKeyReleased
        
// TODO add your handling code here:
       /* int i = evt.getKeyCode();
        if(i == KeyEvent.VK_ENTER){
            if((JTextField)evt.getSource() == jTextFieldDNombres ){
                jTextFieldDApellidos.requestFocus();
            }else if((JTextField)evt.getSource() == jTextFieldDApellidos){
                jTextFieldDCI.requestFocus();
            }else if((JTextField)evt.getSource() == jTextFieldDCI){
                jComboBoxSexo.requestFocus();
            }else if((JComboBox)evt.getSource() == jComboBoxSexo){
                jTextFieldDTel.requestFocus();
            }else if((JTextField)evt.getSource() == jTextFieldDCel){
                jTextFieldDDireccion.requestFocus();
            }else if((JTextField)evt.getSource() == jTextFieldDTel){
                 jTextFieldDCel.requestFocus();
            }else if((JTextField)evt.getSource() == jTextFieldDDireccion){
                jTextFieldDCiudad.requestFocus();
            }else if((JTextField)evt.getSource() == jTextFieldDEmail){
            }else if((JTextField)evt.getSource() == jTextFieldDCiudad){
                jTextFieldDEmail.requestFocus();
            }else{
                jButtonGuardar.requestFocus();
            }
        }   */
    }//GEN-LAST:event_PacienteKeyReleased

    private void jButtonElimPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonElimPacienteActionPerformed
       int eliminar = JOptionPane.showConfirmDialog( null, "Eliminar paciente "+pacienteActual.getNombres()+"con CI "+pacienteActual.getNroCi()+"?");
        if(JOptionPane.YES_OPTION == eliminar){
            boolean i = PacienteControlador.Eliminar(pacienteActual);
            if(i){
                JOptionPane.showMessageDialog(rootPane, "Se eliminó correctamente", "Eliminar Paciente", WIDTH);
                limpiar();
                BotonInvisibles();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar paciente", "Eliminar Paciente", WIDTH);
            }
        }else{
            //cancelado
        }
    }//GEN-LAST:event_jButtonElimPacienteActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        limpiar();
        BotonInvisibles();
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void jButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuActionPerformed
        this.setVisible(false);//oculta el jFrame actual
    }//GEN-LAST:event_jButtonMenuActionPerformed

    private void jButtonOrdenServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenServicioActionPerformed
        BuscarOrdenServicio.userActual = user;
        BuscarOrdenServicio.elPaciente = pacienteActual;
        BuscarOrdenServicio jFrame = new BuscarOrdenServicio();
        jFrame.setVisible(true);
    }//GEN-LAST:event_jButtonOrdenServicioActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        boolean v= validaciones();
        if(v){
            actualizarPaciente(pacienteActual);
            if(pacienteActual != null && pacienteActual.getIdPaciente() > 0){
                int i = PacienteVista.UpDatePaciente(pacienteActual);
                if(i > 0 ){
                    JOptionPane.showMessageDialog(rootPane, "Se modificó correctamente", "Modificar Paciente", WIDTH);
                    escribirPaciente(pacienteActual);
                    jButtonModificar.setVisible(false);
                    jButtonModPaciente.setVisible(true);
                    jButtonElimPaciente.setVisible(true);
                }else{
                    JOptionPane.showMessageDialog(rootPane, "No se logró actualizar paciente", "Modificar Paciente", WIDTH);
                }            
            }
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void soloLetrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soloLetrasKeyTyped
        char c = evt.getKeyChar();
        int i = c;
        if((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (i != 8 && i != 9 && i != 13 && i != 32) ){
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Este campo sólo admite letas A-Z o a-z", "Validez de Campo", WIDTH);
        }
    }//GEN-LAST:event_soloLetrasKeyTyped

    private void soloNumerosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soloNumerosKeyTyped
       char c = evt.getKeyChar();
        int i = c;
        if( (c < '0' || c > '9') && (i != 8 && i != 9 && i != 13) ){
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Este campo sólo admite numeros", "Validez de Campo", WIDTH);
        }
    }//GEN-LAST:event_soloNumerosKeyTyped

    private void jButtonRealizarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRealizarPagoActionPerformed
        Recibos.pac = pacienteActual;
        Recibos.user = user;
        Recibos.main(null);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonRealizarPagoActionPerformed

    private void jButtonGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarReporteActionPerformed
        obtenerFechas.llamado = "EstadoCuenta";
        obtenerFechas jFrame = new obtenerFechas(null, true);
        jFrame.setVisible(true);

        Date[] fechas = jFrame.getReturnStatus();
        if(fechas[0] != null && fechas[1] != null){
        int saldo = PacienteControlador.calcularSaldo(fechas[0], pac.getIdPaciente());
        String reporte="reportes/estado_cuenta_paciente";

        int idPaciente = pac.getIdPaciente();

        Map parametros = new HashMap();
        parametros.put("id_paciente", idPaciente);
        parametros.put("fecha_ini", fechas[0]);
        parametros.put("fecha_fin", fechas[1]);
        parametros.put("saldo_ini", saldo);

        Configuraciones.imprimirReporteHB(reporte, parametros);
        }else{
            JOptionPane.showMessageDialog(null, "Favor ingrese un rango de fechas válidas", "Reporte Estado de Cuenta", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonGenerarReporteActionPerformed

    private void jButtonInsertarConvenioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarConvenioActionPerformed
        DetalleConvenio jFrame = new DetalleConvenio();
        jFrame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonInsertarConvenioActionPerformed

    private void jButtonNotaCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNotaCreditoActionPerformed
        NotasCreditos.pacActual = pacienteActual;
        NotasCreditos.userActual = user;
        NotasCreditos.main(null);
        this.dispose();
    }//GEN-LAST:event_jButtonNotaCreditoActionPerformed
  
    private void jTableConveniosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConveniosMouseClicked
        int fila = jTableConvenios.getSelectedRow();
        Empresa e = con.get(fila);
        DetalleConvenio.empresaActual = e;
        DetalleConvenio.pacActual = pacienteActual;
        DetalleConvenio.main(null);
    }//GEN-LAST:event_jTableConveniosMouseClicked

    private void jTextFieldDNombresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDNombresFocusLost
        String x = jTextFieldDNombres.getText();
        if(x.length() < 3 || x.length() > 25){
            jLabelNom.setVisible(true);
        }else{
            jLabelNom.setVisible(false);
        }        
    }//GEN-LAST:event_jTextFieldDNombresFocusLost

    private void jTextFieldDApellidosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDApellidosFocusLost
        String x = jTextFieldDApellidos.getText();
        if(x.length() < 3 || x.length() > 25){
            jLabelApe.setVisible(true);
        }else{
            jLabelApe.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDApellidosFocusLost

    private void jTextFieldDCIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDCIFocusLost
        String x = jTextFieldDCI.getText();
        if(x.length() < 5 || x.length() > 8){
            jLabelCI.setVisible(true);
        }else{
            jLabelCI.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDCIFocusLost

    private void jTextFieldDTelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDTelFocusLost
        String x = jTextFieldDTel.getText();
        if(x.length() > 20){
            jLabelTel.setVisible(true);
        }else{
            jLabelTel.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDTelFocusLost

    private void jTextFieldDCelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDCelFocusLost
        String x = jTextFieldDCel.getText();
        if(x.length() > 20){
            jLabelCel.setVisible(true);
        }else{
            jLabelCel.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDCelFocusLost

    private void jTextFieldDDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDDireccionFocusLost
        String x = jTextFieldDDireccion.getText();
        if(x.length() < 5 || x.length() > 50){
            jLabelDir.setVisible(true);
        }else{
            jLabelDir.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDDireccionFocusLost

    private void jTextFieldDEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDEmailFocusLost
        String x = jTextFieldDEmail.getText();
        if(x.length() > 20){
            jLabelEmail.setVisible(true);
        }else{
            jLabelEmail.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDEmailFocusLost

    private void jTextFieldDTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDTelKeyTyped
        char c = evt.getKeyChar();
        int i = c;
        if( (c < '0' || c > '9') && (i != 8 && i != 9 && i != 13) ){
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Este campo sólo admite numeros", "Validez de Campo", WIDTH);
        }
    }//GEN-LAST:event_jTextFieldDTelKeyTyped

    private void jTextFieldDCelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDCelKeyTyped
        char c = evt.getKeyChar();
        int i = c;
        if( (c < '0' || c > '9') && (i != 8 && i != 9 && i != 13) ){
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Este campo sólo admite numeros", "Validez de Campo", WIDTH);
        }
    }//GEN-LAST:event_jTextFieldDCelKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Pacientes().setVisible(true);
            }
        });

    }
    //Variables Globales
    Paciente pacienteActual = null;
    Session sessionGlobal;
    OrdenServicio ordenPendiente = null;
    public static Usuario user = null;
    
    DecimalFormat formateador = new DecimalFormat("###,###");
    SimpleDateFormat fecha = new SimpleDateFormat("dd/MM/yyyy");
    
    DefaultTableModel tablaEstado = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    DefaultTableModel tablaConvenio = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    DefaultTableModel tablaAgenda = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    ArrayList<Movimiento> mov = null;
    ArrayList<Agenda> agen = null;
    ArrayList<Empresa> con = null;
    ArrayList<Ciudad> ciudades = null;
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Citas;
    private javax.swing.JLabel Convenio;
    private javax.swing.JLabel Datos;
    private javax.swing.JLabel EstadoC;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonElimPaciente;
    private javax.swing.JButton jButtonGenerarReporte;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonInsPaciente;
    private javax.swing.JButton jButtonInsertarConvenio;
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JButton jButtonModPaciente;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNotaCredito;
    private javax.swing.JButton jButtonOrdenServicio;
    private javax.swing.JButton jButtonRealizarPago;
    private javax.swing.JComboBox jCBciudad;
    private javax.swing.JComboBox jComboBoxSexo;
    private com.toedter.calendar.JDateChooser jDateChooserEdad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelApe;
    private javax.swing.JLabel jLabelCI;
    private javax.swing.JLabel jLabelCel;
    private javax.swing.JLabel jLabelDApellidos;
    private javax.swing.JLabel jLabelDCI;
    private javax.swing.JLabel jLabelDCel;
    private javax.swing.JLabel jLabelDCiudad;
    private javax.swing.JLabel jLabelDDireccion;
    private javax.swing.JLabel jLabelDEdad;
    private javax.swing.JLabel jLabelDEmail;
    private javax.swing.JLabel jLabelDNombres;
    private javax.swing.JLabel jLabelDSexo;
    private javax.swing.JLabel jLabelDTel;
    private javax.swing.JLabel jLabelDir;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelNom;
    private javax.swing.JLabel jLabelTel;
    private javax.swing.JPanel jPanelAgenda;
    private javax.swing.JPanel jPanelConvenios;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelEstadoCuenta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableAgenda;
    private javax.swing.JTable jTableConvenios;
    private javax.swing.JTable jTableEstadoDeCuenta;
    private javax.swing.JTextField jTextFieldDApellidos;
    private javax.swing.JTextField jTextFieldDCI;
    private javax.swing.JTextField jTextFieldDCel;
    private javax.swing.JTextField jTextFieldDDireccion;
    private javax.swing.JTextField jTextFieldDEmail;
    private javax.swing.JTextField jTextFieldDNombres;
    private javax.swing.JTextField jTextFieldDTel;
    private javax.swing.JTextField jTextFieldSaldo;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        
        jTextFieldDNombres.setText("");
        jTextFieldDApellidos.setText("");
        jTextFieldDCI.setText("");       
        jTextFieldDCel.setText("");
        jTextFieldDDireccion.setText("");
        jDateChooserEdad.setDate(null);
        jTextFieldDEmail.setText("");
        jComboBoxSexo.setSelectedIndex(0);
        jTextFieldDTel.setText("");
        
        pacienteActual = null;
        mov = null;
        agen = null;
        con = null;
        
        Configuraciones.limpiarModelo(tablaEstado);
        Configuraciones.limpiarModelo(tablaConvenio);
        Configuraciones.limpiarModelo(tablaAgenda);

    }

    

    private void habilitarDatos() {
        jTextFieldDNombres.setEditable(true);
        jTextFieldDApellidos.setEditable(true);
        jTextFieldDCI.setEditable(true);
        jDateChooserEdad.setEnabled(true);
        jTextFieldDCel.setEditable(true);
        jCBciudad.setEditable(true);
        jTextFieldDDireccion.setEditable(true);
        jTextFieldDEmail.setEditable(true);
        jComboBoxSexo.setEnabled(true);
        jTextFieldDTel.setEditable(true);
    }

    
    private Paciente nuevoPaciente() {
        Paciente p = new Paciente();
        
        p.setNombres(jTextFieldDNombres.getText());
        p.setApellidos(jTextFieldDApellidos.getText());
        int cedula;
        try{            
            cedula = Integer.parseInt(jTextFieldDCI.getText());
        }catch(NumberFormatException ex){
            cedula = 0;
        }        
        p.setNroCi(cedula);     
        
        
        p.setCiudad(ciudades.get(jCBciudad.getSelectedIndex()));
        p.setDireccion(jTextFieldDDireccion.getText());
        
        Date fechanac = jDateChooserEdad.getDate();
        if(fechanac != null){   
            p.setFechaNac(fechanac);
        }else{  p.setFechaNac(new Date());}
        
        p.setEmail(jTextFieldDEmail.getText());
        p.setSexo(jComboBoxSexo.getSelectedItem().toString());
        p.setTelLb(jTextFieldDTel.getText());
        p.setTelCel(jTextFieldDCel.getText());
        p.setPeso(0);
        p.setEnfermedades("");
        p.setObservaciones("");
        p.setAlergias("");
        p.setCirugias("");
        p.setMedicamentos("");  
        p.setEstado("Activo");
        
        return p;
    }

    private void BotonInvisibles() {
        jButtonGuardar.setVisible(false);
        jButtonModificar.setVisible(false);
        jButtonAtras.setVisible(false);
        
        jButtonModPaciente.setVisible(false);
        jButtonElimPaciente.setVisible(false);
        
        jButtonOrdenServicio.setVisible(false);
        jButtonRealizarPago.setVisible(false);
        jButtonGenerarReporte.setVisible(false);
        jButtonInsertarConvenio.setVisible(false);
        jButtonNotaCredito.setVisible(false);
        
        jButtonInsPaciente.setVisible(true);
        jButtonBuscar.setVisible(true);
        
        jLabelNom.setVisible(false);
        jLabelApe.setVisible(false);
        jLabelCI.setVisible(false);
        jLabelTel.setVisible(false);
        jLabelCel.setVisible(false);
        jLabelDir.setVisible(false);
        jLabelEmail.setVisible(false);
    }

    private void insertarPaciente() {
        Paciente p = nuevoPaciente();
        
        int i = PacienteVista.insertarPaciente(p);
        
        if(i > 0){
            //registro insertado correctamente
            JOptionPane.showMessageDialog(rootPane, "Registro insertado correctamente", "Insertar Paciente", WIDTH);
            BotonInvisibles();  
            escribirPaciente(p);
        }else if(i == -1){
            JOptionPane.showMessageDialog(rootPane, "Ingrese Datos Correctamente", "Insertar Paciente", WIDTH);
            jTextFieldDNombres.requestFocus();
        }else{
            //no insertado
            JOptionPane.showMessageDialog(rootPane, "No se pudo Insertar Paciente", "Insertar Paciente", WIDTH);      
        }
    }

    private void escribirPaciente(Paciente paciente) {
        if(paciente.getIdPaciente() != null){    
            jTextFieldDNombres.setText(paciente.getNombres());
            jTextFieldDApellidos.setText(paciente.getApellidos());
            jTextFieldDCI.setText(String.valueOf(formateador.format(paciente.getNroCi())));
            jDateChooserEdad.setDate(paciente.getFechaNac());                     
            
            if(paciente.getSexo().compareTo("M") == 0){
                jComboBoxSexo.setSelectedIndex(0);
            }else{
                jComboBoxSexo.setSelectedIndex(1);
            }
            
            jTextFieldDTel.setText(paciente.getTelLb());
            jTextFieldDCel.setText(paciente.getTelCel());
            jTextFieldDDireccion.setText(paciente.getDireccion());
            jCBciudad.setSelectedItem(paciente.getCiudad().getNombre());
            jTextFieldDEmail.setText(paciente.getEmail());
            
            recuperarEstadoCuenta(paciente);
            recuperarCitas(paciente);
            recuperarConvenios(paciente);
            
             jButtonGuardar.setVisible(false);
             jButtonModificar.setVisible(false);
             jButtonAtras.setVisible(true);
        
             jButtonModPaciente.setVisible(true);
             jButtonElimPaciente.setVisible(true);
        
             jButtonInsPaciente.setVisible(false);
             jButtonBuscar.setVisible(false);
            
        }else{
            JOptionPane.showMessageDialog(rootPane, "Paciente No encontrado", "aviso", WIDTH);
            jButtonModPaciente.doClick();
        }   
    }

    private void actualizarPaciente(Paciente pacienteActual) {
        
        pacienteActual.setNombres(jTextFieldDNombres.getText());
        pacienteActual.setApellidos(jTextFieldDApellidos.getText());
        pacienteActual.setNroCi(Integer.parseInt(jTextFieldDCI.getText().replace(".", "")));
        pacienteActual.setTelLb(jTextFieldDTel.getText());
        pacienteActual.setTelCel(jTextFieldDCel.getText());
        pacienteActual.setCiudad(ciudades.get(jCBciudad.getSelectedIndex()));
        pacienteActual.setDireccion(jTextFieldDDireccion.getText());
        Date fechaNac = jDateChooserEdad.getDate();             
        pacienteActual.setFechaNac(fechaNac);
        pacienteActual.setEmail(jTextFieldDEmail.getText());
        pacienteActual.setSexo(jComboBoxSexo.getSelectedItem().toString());        
        pacienteActual.setEnfermedades("Ninguna");
        pacienteActual.setObservaciones("Ninguna");
        pacienteActual.setAlergias("Ninguna");
        pacienteActual.setCirugias("Ninguna");
        pacienteActual.setMedicamentos("Ninguno");              
        
    }

    private void habilitarBotones() {
        jButtonInsPaciente.setVisible(false);
        jButtonBuscar.setVisible(false);
        
        jButtonModPaciente.setVisible(true);
        jButtonElimPaciente.setVisible(true);
        jButtonAtras.setVisible(true);  
        jButtonNotaCredito.setVisible(true);
        jButtonInsertarConvenio.setVisible(true);
        jButtonGenerarReporte.setVisible(true);
        
        jPanelEstadoCuenta.setEnabled(true);
        jPanelAgenda.setEnabled(true);
        jPanelConvenios.setEnabled(true);
        
        if(OrdenServicioControlador.BuscarOrdenPendiente(pacienteActual.getIdPaciente()) != null){ 
            jButtonOrdenServicio.setVisible(true);
        }    
                
    }

    private void recuperarEstadoCuenta(Paciente pac) {
        
        int saldo = 0;
        
        mov = new ArrayList();
        mov = PacienteControlador.HistoricoDeEstado(pac);
        if(mov != null){
            for(Movimiento m : mov){
                Object[] est = new Object[4];
                est[0] = fecha.format(m.getFecha());
                est[1] = m.getMovimiento();
                est[2] = formateador.format(m.getDebe());
                est[3] = formateador.format(m.getHaber());
                saldo = m.getDebe() - m.getHaber() + saldo;
                tablaEstado.addRow(est);
            }
            if(saldo > 0){
                jTextFieldSaldo.setText(formateador.format(saldo));
                jButtonRealizarPago.setVisible(true);
            }
        }
        
    }

    private void recuperarCitas(Paciente pac) {
        
        agen = new ArrayList();
        agen = AgendaControlador.HistoricoCitasPaciente(pac);
        if(agen != null){
            for(Agenda a : agen){
                Object[] age = new Object[6];
                age[0] = fecha.format(a.getFecha());
                age[1] = a.getHora();
                age[2] = a.getServicio().getDescripcion();
                age[3] = a.getDoctor().getNombre() + " " + a.getDoctor().getApellido();
                age[4] = a.getEstado();
                if(a.getOrdenServicio() == null){
                    age[5] = null;
                }else{
                    age[5] = a.getOrdenServicio().getIdordenServicio();
                }
                tablaAgenda.addRow(age);
            }
        }
    }

    private void recuperarConvenios(Paciente pac) {
        
        con = new ArrayList();
        con = ConvenioControlador.BuscarConvenioEmpresa(pac);
        if(con != null){
            for(Empresa e : con){
                Object[] emp = new Object[3];
                emp[0] = e.getNombre();
                emp[1] = e.getRuc();
                emp[2] = e.getTelefono();
                tablaConvenio.addRow(emp);
            }
        }
    }
    
    private void recuperarCiudades() {
        
        jCBciudad.removeAllItems();
        ciudades = new ArrayList<Ciudad>();
        ciudades = CiudadControlador.ListarCiudades();
        for(int i=0;i<ciudades.size();i++){
            jCBciudad.addItem(ciudades.get(i).getNombre());
        }
    }
    
    private boolean validaciones() {
        boolean v = false;
        if(jLabelNom.isVisible() == true || jLabelApe.isVisible() == true || jLabelCI.isVisible() == true || 
                jLabelTel.isVisible() == true || jLabelCel.isVisible() == true || jLabelDir.isVisible() == true || 
                jLabelEmail.isVisible() == true){
            JOptionPane.showMessageDialog(null, "Favor complete correctamente los campos");
        }else{
            v = true;
        }
        return v;
    }
    
    private String obFecha(Date f){
        String fecha = null;
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        fecha = formato.format(f);
        return fecha;
    }
}