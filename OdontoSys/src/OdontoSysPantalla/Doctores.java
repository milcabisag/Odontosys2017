/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package OdontoSysPantalla;

import OdontoSysControlador.CiudadControlador;
import OdontoSysControlador.DoctorControlador;
import OdontoSysModelo.Ciudad;
import OdontoSysModelo.Doctor;
import OdontoSysPantallaAuxiliares.ObtenerDoctor;
import OdontoSysVista.DoctorVista;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import org.hibernate.Session;

/**
 *
 * @author user
 */
public class Doctores extends javax.swing.JFrame {
    /**
     * Creates new form Doctor
     */
    public Doctores() {
        initComponents();
        ocultarBotones();
        recuperarCiudades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAtras = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonConsultarDoctor = new javax.swing.JButton();
        jButtonEliminarDoctor = new javax.swing.JButton();
        jButtonModificarDoctor = new javax.swing.JButton();
        jButtonInsertarDoctor = new javax.swing.JButton();
        jButtonMenu = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelnomb = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDocReg = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabelTel = new javax.swing.JLabel();
        jDateChooserDocFecha = new com.toedter.calendar.JDateChooser();
        jTextFieldDocDir = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDocApe = new javax.swing.JTextField();
        jLabelDir = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxSexo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDocTel = new javax.swing.JTextField();
        jLabelEmail = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDocCed = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldDocCel = new javax.swing.JTextField();
        jTextFieldDocEmail = new javax.swing.JTextField();
        jLabelCel = new javax.swing.JLabel();
        jTextFieldDocNomb = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCBciudad = new javax.swing.JComboBox();
        jLabelReg = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelape = new javax.swing.JLabel();
        jLabelCI = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 600));

        jButtonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/eliminar.png"))); // NOI18N
        jButtonAtras.setText("Cancelar");
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/guardar.png"))); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonConsultarDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/buscar.png"))); // NOI18N
        jButtonConsultarDoctor.setText("Buscar Doctor");
        jButtonConsultarDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarDoctorActionPerformed(evt);
            }
        });

        jButtonEliminarDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/eliminar.png"))); // NOI18N
        jButtonEliminarDoctor.setText("Eliminar Doctor");
        jButtonEliminarDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarDoctorActionPerformed(evt);
            }
        });

        jButtonModificarDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/modificar.png"))); // NOI18N
        jButtonModificarDoctor.setText("Modificar Doctor");
        jButtonModificarDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarDoctorActionPerformed(evt);
            }
        });

        jButtonInsertarDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/agregar.png"))); // NOI18N
        jButtonInsertarDoctor.setText("Ingresar Doctor");
        jButtonInsertarDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarDoctorActionPerformed(evt);
            }
        });

        jButtonMenu.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        jButtonMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/accesos.png"))); // NOI18N
        jButtonMenu.setText("Volver a menú principal");
        jButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel12.setText("Datos del Doctor");

        jPanel1.setFocusable(false);
        jPanel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelnomb.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelnomb.setForeground(new java.awt.Color(255, 0, 0));
        jLabelnomb.setText("Entre 3 y 30 caracteres permitidos");
        jLabelnomb.setToolTipText("");
        jPanel1.add(jLabelnomb, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 11, 208, 25));

        jLabel5.setText("Sexo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 128, -1, -1));

        jTextFieldDocReg.setEditable(false);
        jTextFieldDocReg.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocReg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocRegFocusLost(evt);
            }
        });
        jPanel1.add(jTextFieldDocReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 349, 250, 28));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("Teléfono");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 165, -1, -1));

        jLabelTel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTel.setForeground(new java.awt.Color(255, 0, 0));
        jLabelTel.setText("Hasta 20 caracteres permitidos");
        jPanel1.add(jLabelTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 165, -1, -1));

        jDateChooserDocFecha.setEnabled(false);
        jPanel1.add(jDateChooserDocFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 121, -1, 28));

        jTextFieldDocDir.setEditable(false);
        jTextFieldDocDir.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocDir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocDirFocusLost(evt);
            }
        });
        jPanel1.add(jTextFieldDocDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 238, 250, 28));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Nombres");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 16, -1, -1));

        jTextFieldDocApe.setEditable(false);
        jTextFieldDocApe.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocApe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocApeFocusLost(evt);
            }
        });
        jTextFieldDocApe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDocApeKeyTyped(evt);
                soloLetrasKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldDocApe, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 45, 250, 28));

        jLabelDir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDir.setForeground(new java.awt.Color(255, 0, 0));
        jLabelDir.setText("Entre 5 y 50 caracteres permitidos");
        jPanel1.add(jLabelDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 243, -1, -1));

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel11.setText("Reg. Prof. Nro");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 354, -1, -1));

        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        jComboBoxSexo.setEnabled(false);
        jPanel1.add(jComboBoxSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 121, -1, 28));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Nro de CI");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 86, -1, -1));

        jTextFieldDocTel.setEditable(false);
        jTextFieldDocTel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocTel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocTelFocusLost(evt);
            }
        });
        jTextFieldDocTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloNumerosKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldDocTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 160, 250, 28));

        jLabelEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelEmail.setForeground(new java.awt.Color(255, 0, 0));
        jLabelEmail.setText("Hasta 20 caracteres permitidos");
        jLabelEmail.setToolTipText("");
        jPanel1.add(jLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 311, 208, 25));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel10.setText("Email");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 316, -1, -1));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Celular");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 204, -1, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Apellidos");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 50, -1, -1));

        jTextFieldDocCed.setEditable(false);
        jTextFieldDocCed.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocCed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocCedFocusLost(evt);
            }
        });
        jTextFieldDocCed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloNumerosKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldDocCed, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 81, 250, 28));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel8.setText("Dirección");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 243, -1, -1));

        jTextFieldDocCel.setEditable(false);
        jTextFieldDocCel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocCel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocCelFocusLost(evt);
            }
        });
        jTextFieldDocCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloNumerosKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldDocCel, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 199, 250, 28));

        jTextFieldDocEmail.setEditable(false);
        jTextFieldDocEmail.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDocEmailActionPerformed(evt);
            }
        });
        jTextFieldDocEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocEmailFocusLost(evt);
            }
        });
        jPanel1.add(jTextFieldDocEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 311, 250, 28));

        jLabelCel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCel.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCel.setText("Hasta 20 caracteres permitidos");
        jPanel1.add(jLabelCel, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 204, -1, -1));

        jTextFieldDocNomb.setEditable(false);
        jTextFieldDocNomb.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextFieldDocNomb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDocNombFocusLost(evt);
            }
        });
        jTextFieldDocNomb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloLetrasKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldDocNomb, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 11, 250, 28));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Fecha de Nacimiento");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 132, -1, -1));

        jCBciudad.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jCBciudad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jCBciudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 277, 250, 28));

        jLabelReg.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelReg.setForeground(new java.awt.Color(255, 0, 0));
        jLabelReg.setText("Hasta 30 caracteres permitidos");
        jLabelReg.setToolTipText("");
        jPanel1.add(jLabelReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 349, 193, 25));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel9.setText("Ciudad");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 283, -1, -1));

        jLabelape.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelape.setForeground(new java.awt.Color(255, 0, 0));
        jLabelape.setText("Entre 3 y 30 caracteres permitidos");
        jLabelape.setToolTipText("");
        jPanel1.add(jLabelape, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 45, -1, 25));

        jLabelCI.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelCI.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCI.setText("Entre 5 y 8 caracteres permitidos");
        jPanel1.add(jLabelCI, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 86, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonConsultarDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonInsertarDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonModificarDoctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEliminarDoctor)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonMenu)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonEliminarDoctor)
                        .addComponent(jButtonModificarDoctor)
                        .addComponent(jButtonInsertarDoctor))
                    .addComponent(jButtonConsultarDoctor))
                .addGap(19, 19, 19)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMenu)
                    .addComponent(jButtonAtras)
                    .addComponent(jButtonGuardar))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldDocEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDocEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDocEmailActionPerformed

    private void jButtonConsultarDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarDoctorActionPerformed

        ObtenerDoctor jDialog= new ObtenerDoctor(null, true);
        jDialog.setVisible(true);
        doctorActual = jDialog.getReturnStatus();
        if(doctorActual != null){
             escribirDoctor(doctorActual);
            mostrarBotones();
        }else {
            JOptionPane.showMessageDialog(null, "No se pudo recuperar el doctor" , "Obtener Doctor" , JOptionPane.QUESTION_MESSAGE );
        } 
        /*        limpiar();
        String cedulaString = JOptionPane.showInputDialog ( null, "Ingrese Ci de Doctor" , "Consultar Doctor" , JOptionPane.QUESTION_MESSAGE ) ;
       // int  cedula= Integer.parseInt(cedulaString);
        doctorActual = DoctorControlador.BuscarCedula(cedulaString);            
        if (doctorActual != null) {
            escribirDoctor(doctorActual);
            mostrarBotones();
        } else {
            
            //insertar un jDialog que indique que ingrese un numero de cedula
            JOptionPane.showMessageDialog(null, "Doctor no encontrado!" , "DoctorControlador" , JOptionPane.QUESTION_MESSAGE );
        }
        */
    }//GEN-LAST:event_jButtonConsultarDoctorActionPerformed

    private void jButtonInsertarDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarDoctorActionPerformed
        limpiar();
        habilitarDatos();
        jTextFieldDocNomb.requestFocus(rootPaneCheckingEnabled);
        habilitarBotonInsertar();  
    }//GEN-LAST:event_jButtonInsertarDoctorActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
    String nombreBoton = jButtonGuardar.getText();
    obtenerDoctor();
    boolean valido = DoctorVista.validarDoctor(doctorActual);
    if(valido){
        if(nombreBoton.compareTo("Guardar") == 0){
            int r = DoctorControlador.BuscarRegistro(doctorActual.getRegProf());
            if(r == 1){
                insertarDoctor();
                limpiar();
                BotonesInvisibles();   
            }else{
                JOptionPane.showMessageDialog(null, "El Registro Profesional ya existe, no se puede insertar" , "Validación de Doctor" , WIDTH);
            }
        }else if(nombreBoton.compareTo("Modificar") == 0){
            modificarDoctor();
            mostrarBotones();
            deshabilitarDatos();
            }
    }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonModificarDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarDoctorActionPerformed
        habilitarBotonModificar();
        habilitarDatos();
    }//GEN-LAST:event_jButtonModificarDoctorActionPerformed

    private void jButtonEliminarDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarDoctorActionPerformed
        int eliminar = JOptionPane.showConfirmDialog(null, "Eliminar Doctor "+doctorActual.getNombre()+" con Ci Nro "+doctorActual.getNroCi()+"??");
        if (eliminar == JOptionPane.YES_OPTION){
             boolean i = DoctorControlador.Eliminar(doctorActual);
             if(i){
                JOptionPane.showMessageDialog(rootPane, "Se eliminó correctamente", "Eliminar Doctor", WIDTH);
                limpiar();
                jButtonAtras.doClick();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar doctor", "Eliminar Doctor", WIDTH);
            }
        }
        else{
            limpiar();
        }

    }//GEN-LAST:event_jButtonEliminarDoctorActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        limpiar();
        ocultarBotones();
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void jButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuActionPerformed
        this.setVisible(false);//oculta el jFrame actual
    }//GEN-LAST:event_jButtonMenuActionPerformed

    private void soloLetrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soloLetrasKeyTyped
        char c = evt.getKeyChar();
        int i = c;
        if((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (i != 8 && i != 9 && i != 13 && i != 32) && (i < 129 && i > 165) ){
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Este campo sólo admite letas A-Z o a-z", "Validez de Campo", WIDTH);
        }
    }//GEN-LAST:event_soloLetrasKeyTyped

    private void jTextFieldDocApeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDocApeKeyTyped
    }//GEN-LAST:event_jTextFieldDocApeKeyTyped

    private void soloNumerosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soloNumerosKeyTyped
        char c = evt.getKeyChar();
        int i = c;
        if( (c < '0' || c > '9') && (i != 8 && i != 9 && i != 13) ){
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Este campo sólo admite numeros", "Validez de Campo", WIDTH);
        }
    }//GEN-LAST:event_soloNumerosKeyTyped

    private void jTextFieldDocNombFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocNombFocusLost
        String n = jTextFieldDocNomb.getText();
        if(n.length() < 3 || n.length() > 30){
            jLabelnomb.setVisible(true);
        }else{
            jLabelnomb.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocNombFocusLost

    private void jTextFieldDocApeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocApeFocusLost
        String n = jTextFieldDocApe.getText();
        if(n.length() < 3 || n.length() > 30){
            jLabelape.setVisible(true);
        }else{
            jLabelape.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocApeFocusLost

    private void jTextFieldDocCedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocCedFocusLost
        String n = jTextFieldDocCed.getText();
        if(n.length() < 5 || n.length() > 8){
            jLabelCI.setVisible(true);
        }else{
            jLabelCI.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocCedFocusLost

    private void jTextFieldDocTelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocTelFocusLost
        String n = jTextFieldDocTel.getText();
        if(n.length() > 20){
            jLabelTel.setVisible(true);
        }else{
            jLabelTel.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocTelFocusLost

    private void jTextFieldDocCelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocCelFocusLost
        String n = jTextFieldDocCel.getText();
        if(n.length() > 20){
            jLabelCel.setVisible(true);
        }else{
            jLabelCel.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocCelFocusLost

    private void jTextFieldDocDirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocDirFocusLost
        String n = jTextFieldDocDir.getText();
        if(n.length() < 5 || n.length() > 20){
            jLabelDir.setVisible(true);
        }else{
            jLabelDir.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocDirFocusLost

    private void jTextFieldDocEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocEmailFocusLost
        String n = jTextFieldDocEmail.getText();
        if(n.length() > 20){
            jLabelEmail.setVisible(true);
        }else{
            jLabelEmail.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocEmailFocusLost

    private void jTextFieldDocRegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDocRegFocusLost
        String n = jTextFieldDocReg.getText();
        if(n.length() > 30){
            jLabelReg.setVisible(true);
        }else{
            jLabelReg.setVisible(false);
        }
    }//GEN-LAST:event_jTextFieldDocRegFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Doctores().setVisible(true);
            }
        });

    }
    
    //Variables Globales
    Doctor doctorActual = null;
    Session sessionGlobal = null;
    DecimalFormat formateador = new DecimalFormat("###,###");
    
    ArrayList<Ciudad> ciudades = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonConsultarDoctor;
    private javax.swing.JButton jButtonEliminarDoctor;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonInsertarDoctor;
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JButton jButtonModificarDoctor;
    private javax.swing.JComboBox jCBciudad;
    private javax.swing.JComboBox jComboBoxSexo;
    private com.toedter.calendar.JDateChooser jDateChooserDocFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCI;
    private javax.swing.JLabel jLabelCel;
    private javax.swing.JLabel jLabelDir;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelReg;
    private javax.swing.JLabel jLabelTel;
    private javax.swing.JLabel jLabelape;
    private javax.swing.JLabel jLabelnomb;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldDocApe;
    private javax.swing.JTextField jTextFieldDocCed;
    private javax.swing.JTextField jTextFieldDocCel;
    private javax.swing.JTextField jTextFieldDocDir;
    private javax.swing.JTextField jTextFieldDocEmail;
    private javax.swing.JTextField jTextFieldDocNomb;
    private javax.swing.JTextField jTextFieldDocReg;
    private javax.swing.JTextField jTextFieldDocTel;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        jTextFieldDocNomb.setText("");
        jTextFieldDocApe.setText("");
        jTextFieldDocCed.setText("");
        jDateChooserDocFecha.setDate(null);
        jComboBoxSexo.setSelectedIndex(0);
        jCBciudad.setSelectedIndex(0);
        jTextFieldDocTel.setText("");
        jTextFieldDocCel.setText("");
        jTextFieldDocDir.setText("");
        jCBciudad.setSelectedIndex(0);
        jTextFieldDocEmail.setText("");
        jTextFieldDocReg.setText("");
    }

    private void escribirDoctor(Doctor doctor) {
        if(doctor != null){    
            jTextFieldDocNomb.setText(doctor.getNombre());
            jTextFieldDocApe.setText(doctor.getApellido());
            jTextFieldDocCed.setText(String.valueOf(formateador.format(doctor.getNroCi())));
            jDateChooserDocFecha.setDate(doctor.getFechaNac());
            if(doctor.getSexo().compareTo("M") == 0){
                jComboBoxSexo.setSelectedIndex(0);
            }else{
                jComboBoxSexo.setSelectedIndex(1);
            }
            jTextFieldDocTel.setText(doctor.getTeLb());
            jTextFieldDocCel.setText(doctor.getTelCel());
            jTextFieldDocDir.setText(doctor.getDireccion());
            jCBciudad.setSelectedItem(doctor.getCiudad());
            jTextFieldDocEmail.setText(doctor.getEmail());
            jTextFieldDocReg.setText(doctor.getRegProf());
        }else{
            JOptionPane.showMessageDialog(rootPane, "Doctor no encontrado", "Aviso", WIDTH);
        }  
    }
    
    private void habilitarDatos() {
        jTextFieldDocNomb.setEditable(true);
        jTextFieldDocApe.setEditable(true);
        jTextFieldDocCed.setEditable(true);
        jDateChooserDocFecha.setEnabled(true);
        jComboBoxSexo.setEnabled(true);
        jCBciudad.setEnabled(true);
        jTextFieldDocTel.setEditable(true);
        jTextFieldDocCel.setEditable(true);
        jTextFieldDocDir.setEditable(true);
        jTextFieldDocEmail.setEditable(true);
        jTextFieldDocReg.setEditable(true);
    }
    
    private void deshabilitarDatos() {
        jTextFieldDocNomb.setEditable(false);
        jTextFieldDocApe.setEditable(false);
        jTextFieldDocCed.setEditable(false);
        jDateChooserDocFecha.setEnabled(false);
        jComboBoxSexo.setEnabled(false);
        jTextFieldDocTel.setEditable(false);
        jTextFieldDocCel.setEditable(false);
        jTextFieldDocDir.setEditable(false);
        jCBciudad.setEnabled(false);
        jTextFieldDocEmail.setEditable(false);
        jTextFieldDocReg.setEditable(false);
    }
    private void habilitarBotonModificar() {
        jButtonGuardar.setVisible(true);
        jButtonGuardar.setText("Modificar");        
        jButtonAtras.setVisible(true);
        jButtonAtras.setText("Atras");    
    }

    private void habilitarBotonInsertar() {
        jButtonInsertarDoctor.setVisible(false);
        jButtonGuardar.setVisible(true);
        jButtonGuardar.setText("Guardar");
        jButtonAtras.setVisible(true);
        jButtonAtras.setText("Volver");
    }

    private void insertarDoctor() {
    int i = DoctorControlador.insertarDoctor(doctorActual);
    if(i > 0){
            //registro insertado correctamente
        JOptionPane.showMessageDialog(rootPane, "Doctor "+doctorActual.getNombre()+" insertado", "Insertar Doctor", WIDTH);
        }else{
            //no insertado
        JOptionPane.showMessageDialog(rootPane, "No se pudo Insertar Doctor", "Insertar Doctor", WIDTH);      
        }    
    }

    private void modificarDoctor() {
        int i = DoctorControlador.UpDateDoctor(doctorActual);
            JOptionPane.showMessageDialog(rootPane, "Se modificó correctamente", "Modificar Doctor", WIDTH);
            doctorActual = null;
    }

    private void obtenerDoctor() {
        if(jButtonGuardar.getText().compareTo("Guardar") == 0){
            doctorActual  = new Doctor();
        }
        doctorActual.setNombre(jTextFieldDocNomb.getText());
        doctorActual.setApellido(jTextFieldDocApe.getText());
        doctorActual.setNroCi(Integer.parseInt(jTextFieldDocCed.getText().replace(".", "")));
        Date fechaNac = jDateChooserDocFecha.getDate();             
        doctorActual.setFechaNac(fechaNac);
        doctorActual.setSexo(jComboBoxSexo.getSelectedItem().toString());
        doctorActual.setTeLb(jTextFieldDocTel.getText());
        doctorActual.setTelCel(jTextFieldDocCel.getText());
        doctorActual.setDireccion(jTextFieldDocDir.getText());
        doctorActual.setCiudad(ciudades.get(jCBciudad.getSelectedIndex()).getNombre());
        doctorActual.setEmail(jTextFieldDocEmail.getText());
        doctorActual.setRegProf(jTextFieldDocReg.getText());
        doctorActual.setEstado("Activo");
        
    }

    private void BotonesInvisibles() {
        jButtonGuardar.setVisible(false);
        jButtonAtras.setVisible(false);   
    }

    private void ocultarBotones() {
        jButtonModificarDoctor.setVisible(false);
        jButtonEliminarDoctor.setVisible(false);
        jButtonGuardar.setVisible(false);
        jButtonAtras.setVisible(false);
        jButtonConsultarDoctor.setVisible(true);
        jButtonInsertarDoctor.setVisible(true);
        
        jLabelnomb.setVisible(false);
        jLabelape.setVisible(false);
        jLabelCI.setVisible(false);
        jLabelTel.setVisible(false);
        jLabelCel.setVisible(false);
        jLabelDir.setVisible(false);
        jLabelEmail.setVisible(false);
        jLabelReg.setVisible(false);
    }

    private void mostrarBotones() {
        jButtonModificarDoctor.setVisible(true);
        jButtonEliminarDoctor.setVisible(true);
        jButtonAtras.setVisible(true);
        jButtonInsertarDoctor.setVisible(false);
        jButtonConsultarDoctor.setVisible(false);
        jButtonGuardar.setVisible(false);
    }  

    private void recuperarCiudades() {
        
        jCBciudad.removeAllItems();
        ciudades = new ArrayList<Ciudad>();
        ciudades = CiudadControlador.ListarCiudades();
        for(int i=0;i<ciudades.size();i++){
            jCBciudad.addItem(ciudades.get(i).getNombre());
        }
    }

}
