/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package OdontoSysPantallaAuxiliares;

import OdontoSysModelo.Diente;
import OdontoSysUtil.Configuraciones;
import OdontoSysVista.DienteVista;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tito
 */
public class BuscarDiente extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    private static Diente diente = null;
    private DefaultTableModel modeloTabla = new DefaultTableModel();

    /**
     * Creates new form BuscarDiente
     * @param parent
     * @param modal
     */
    public BuscarDiente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        cargarModelo(false, "");
        initComponents();
        
        this.setLocationRelativeTo(null);

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(diente);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public Diente getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNombreDiente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableofDientes = new javax.swing.JTable();

        setTitle("BuscarDiente");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        okButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/ingresar.png"))); // NOI18N
        okButton.setText("Aceptar");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        getContentPane().add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 351, -1, 30));
        getRootPane().setDefaultButton(okButton);

        cancelButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagenesOdontosys/DienteSanos/eliminar.png"))); // NOI18N
        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 351, -1, 30));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Nombre / Nro");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 29, 105, 26));

        jTextFieldNombreDiente.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTextFieldNombreDiente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                apretandoTeclados(evt);
            }
        });
        getContentPane().add(jTextFieldNombreDiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 28, 343, -1));

        jTableofDientes.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTableofDientes.setModel(modeloTabla);
        jScrollPane1.setViewportView(jTableofDientes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 63, -1, 275));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        int fila = jTableofDientes.getSelectedRow();
        if( fila > -1 ){
            Integer idDiente = Integer.parseInt((String)modeloTabla.getValueAt(fila, 0));
            String nombre = (String)modeloTabla.getValueAt(fila, 1);
            int nomenclatura = Integer.parseInt((String)modeloTabla.getValueAt(fila, 2));
            
            diente = new Diente();
            diente.setIddiente(idDiente);
            diente.setNombre(nombre);
            diente.setNomenclatura(nomenclatura);
            
            doClose(diente);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Seleccione un Diente", "BuacarDiente", WIDTH);
        }       
        
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(null);
    }//GEN-LAST:event_closeDialog

    private void apretandoTeclados(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apretandoTeclados
        // TODO add your handling code here:
        cargarModelo(true, jTextFieldNombreDiente.getText());
    }//GEN-LAST:event_apretandoTeclados
    
    private void doClose(Diente retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarDiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarDiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarDiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarDiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                BuscarDiente dialog = new BuscarDiente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableofDientes;
    private javax.swing.JTextField jTextFieldNombreDiente;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private Diente returnStatus = null;

    private void cargarModelo(boolean cargarDatos, String nombreDiente) {
        if (cargarDatos) {
            modeloTabla = Configuraciones.limpiarModelo(modeloTabla);
            
            ArrayList<Diente> listaDiente = DienteVista.BuscarPorNombre(nombreDiente);
            for(Diente adiente : listaDiente){
                
                String[] rowData = new String[3];
                rowData[0] = String.valueOf(adiente.getIddiente());
                rowData[1] = adiente.getNombre();
                rowData[2] = String.valueOf(adiente.getNomenclatura());
                
                modeloTabla.addRow(rowData);
            }
        } else {
            modeloTabla.addColumn("IdDiente");
            modeloTabla.addColumn("NombreDiente");
            modeloTabla.addColumn("Nomenclatura");
            
            modeloTabla = Configuraciones.limpiarModelo(modeloTabla);
            
            ArrayList<Diente> listaDiente = DienteVista.BuscarPorNombre(nombreDiente);
            for(Diente adiente : listaDiente){
                
                String[] rowData = new String[3];
                rowData[0] = String.valueOf(adiente.getIddiente());
                rowData[1] = adiente.getNombre();
                rowData[2] = String.valueOf(adiente.getNomenclatura());
                
                modeloTabla.addRow(rowData);
            }
        }
    }
}
